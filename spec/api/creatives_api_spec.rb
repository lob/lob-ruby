=begin
#Lob

#The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

The version of the OpenAPI document: 1.3.0
Contact: lob-openapi@lob.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Lob::CreativesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CreativesApi' do
  before do
    # run before each test
    @api_instance = Lob::CreativesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CreativesApi' do
    it 'should create an instance of CreativesApi' do
      expect(@api_instance).to be_instance_of(Lob::CreativesApi)
    end
  end

  # unit tests for creative_create
  # create
  # Creates a new creative with the provided properties
  # @param creative_writable 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_lang_output * &#x60;native&#x60; - Translate response to the native language of the country in the request * &#x60;match&#x60; - match the response to the language in the request  Default response is in English. 
  # @return [CreativeResponse]
  describe 'creative_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for creative_retrieve
  # get
  # Retrieves the details of an existing creative. You need only supply the unique creative identifier that was returned upon creative creation.
  # @param crv_id id of the creative
  # @param [Hash] opts the optional parameters
  # @return [CreativeResponse]
  describe 'creative_retrieve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for creative_update
  # update
  # Update the details of an existing creative. You need only supply the unique identifier that was returned upon creative creation.
  # @param crv_id id of the creative
  # @param creative_patch 
  # @param [Hash] opts the optional parameters
  # @return [CreativeResponse]
  describe 'creative_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
