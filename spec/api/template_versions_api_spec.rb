=begin
#Lob

#The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 

The version of the OpenAPI document: 1.3.0
Contact: lob-openapi@lob.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for Lob::TemplateVersionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TemplateVersionsApi' do
  before do
    # run before each test
    @api_instance = Lob::TemplateVersionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TemplateVersionsApi' do
    it 'should create an instance of TemplateVersionsApi' do
      expect(@api_instance).to be_instance_of(Lob::TemplateVersionsApi)
    end
  end

  # unit tests for create_template_version
  # create
  # Creates a new template version attached to the specified template.
  # @param tmpl_id The ID of the template the new version will be attached to
  # @param template_version_writable 
  # @param [Hash] opts the optional parameters
  # @return [TemplateVersion]
  describe 'create_template_version test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for template_version_delete
  # delete
  # Permanently deletes a template version. A template&#39;s &#x60;published_version&#x60; can not be deleted.
  # @param tmpl_id The ID of the template to which the version belongs.
  # @param vrsn_id id of the template_version
  # @param [Hash] opts the optional parameters
  # @return [TemplateVersionDeletion]
  describe 'template_version_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for template_version_retrieve
  # get
  # Retrieves the template version with the given template and version ids.
  # @param tmpl_id The ID of the template to which the version belongs.
  # @param vrsn_id id of the template_version
  # @param [Hash] opts the optional parameters
  # @return [TemplateVersion]
  describe 'template_version_retrieve test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for template_version_update
  # update
  # Updates the template version with the given template and version ids.
  # @param tmpl_id The ID of the template to which the version belongs.
  # @param vrsn_id id of the template_version
  # @param template_version_updatable 
  # @param [Hash] opts the optional parameters
  # @return [TemplateVersion]
  describe 'template_version_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for template_versions_list
  # list
  # Returns a list of template versions for the given template ID. The template versions are sorted by creation date, with the most recently created appearing first. 
  # @param tmpl_id The ID of the template associated with the retrieved versions
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit How many results to return.
  # @option opts [String] :before A reference to a list entry used for paginating to the previous set of entries. This field is pre-populated in the &#x60;previous_url&#x60; field in the return response. 
  # @option opts [String] :after A reference to a list entry used for paginating to the next set of entries. This field is pre-populated in the &#x60;next_url&#x60; field in the return response. 
  # @option opts [Array<String>] :include Request that the response include the total count by specifying &#x60;include[]&#x3D;total_count&#x60;. 
  # @option opts [Hash<String, Time>] :date_created Filter by date created.
  # @return [TemplateVersionList]
  describe 'template_versions_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
